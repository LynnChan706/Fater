#!/usr/bin/env python2.7
# coding=utf-8

'''
@date = '17/4/7'
@author = 'chenliang'
@email = 'chenliang2380@cvte.cn'
'''

from PyQt5.QtWidgets import *
from PyQt5 import QtCore
from PyQt5 import QtGui
from PyQt5.QtCore import Qt
import ui_imageview
import graphicview


class ImageView(QWidget,ui_imageview.Ui_imageview):

    setTemplateSignal=QtCore.pyqtSignal()

    def __init__(self):
        super(ImageView,self).__init__()
        self.setupUi(self)
        self.setWindowTitle("Image View")
        self.setWindowOpacity(1)
        self.stackLayout = QStackedLayout(self)
        self.stackLayout.setStackingMode(QStackedLayout.StackAll)
        self.stackLayout.setContentsMargins(1, 3, 1, 1)
        self.stackLayout.setSpacing(3)
        self.stackLayout.setObjectName("stackLayout")
        self.stackLayout.setAlignment(QtCore.Qt.AlignBottom)

        self._init_UI()
        self.setAttribute(Qt.WA_TranslucentBackground)

        self._nonpix = QtGui.QImage('./RES/nonpicture.jpg')
        self.setDisplayImage(self._nonpix)
        self._paramwidget=None
        self._id = None

    def simpleModel(self):
        self.mtoolbar.setVisible(False)

    def setParamWidget(self,param):
        self._paramwidget=param
        self.temprbtn.clicked.connect(self._paramwidget.showTemplateImg)
        self.prcrbtn.clicked.connect(self._paramwidget.showProlateImg)

    def roiChanged(self,roi):
        if self._paramwidget is not None:
            self._paramwidget.setRoi(roi)

    def _init_UI(self):

        self.mtoolbar = QWidget(self)
        self.mtoolbar.setObjectName("mtoolbar")
        self.mtoolbar.setStyleSheet("QWidget#mtoolbar"
                                    "{background-color:rgba(0,0,0,15%);}"
                                    "QPushButton"
                                    "{background-color: rgba(243,239,235,20%);"
                                    "border-style: outset;"
                                    "border-width: 2px;"
                                    "border-radius: 10px;"
                                    "border-color: beige;"
                                    "font: bold 14px;"
                                    "min-width:5em;"
                                    "padding: 6px;} "
                                    "QPushButton:pressed "
                                    "{background-color: rgba(239,235,231,70%);"
                                    "border-style: inset;}")

        self.mtoolbar.setMaximumHeight(40)
        self.hlayout = QHBoxLayout(self.mtoolbar)
        self.hlayout.setContentsMargins(1, 2, 1, 1)
        self.hlayout.setSpacing(6)
        # self.vspace1=QSpacerItem

        self.idLabel=QLabel('')
        font = QtGui.QFont()
        # font.setItalic(True)
        font.setPointSize(23)
        self.idLabel.setFont(font)
        self.idLabel.setStyleSheet('color: #3388FF')
        self.idLabel.setMaximumWidth(100)
        self.idLabel.setMinimumWidth(30)
        # self.idLabel.setFixedWidth(40)
        self.hlayout.addWidget(self.idLabel)

        self.spacerItem1 = QSpacerItem(0, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.hlayout.addItem(self.spacerItem1)

        self.setTemp = QPushButton('set template')
        self.setTemp.setMaximumWidth(50)
        self.setTemp.setMinimumWidth(20)
        self.setTemp.setFixedWidth(40)
        self.setTemp.clicked.connect(self.setTemplateSignal)
        # self.btn.setMaximumHeight(30)

        self.hlayout.addWidget(self.setTemp)

        self.vlayout =QVBoxLayout(self.mtoolbar)
        self.vlayout.setContentsMargins(1, 2, 1, 1)
        self.vlayout.setSpacing(1)

        self.temprbtn=QRadioButton('Template')
        self.temprbtn.setMaximumWidth(100)
        self.temprbtn.setMinimumWidth(20)
        self.vlayout.addWidget(self.temprbtn)

        self.prcrbtn=QRadioButton('Process')
        self.prcrbtn.setMaximumWidth(100)
        self.prcrbtn.setMinimumWidth(20)
        self.prcrbtn.setChecked(True)
        self.vlayout.addWidget(self.prcrbtn)
        self.hlayout.addLayout(self.vlayout)
        self.StateLabel=QLabel('PASS')
        font = QtGui.QFont()
        font.setItalic(True)
        font.setPointSize(28)
        self.StateLabel.setFont(font)
        self.StateLabel.setStyleSheet('color: rgb(237, 14, 63)')
        self.StateLabel.setMaximumWidth(50)
        self.StateLabel.setMinimumWidth(20)
        self.StateLabel.setFixedWidth(40)
        self.hlayout.addWidget(self.StateLabel)

        self.StateLabel.setVisible(False)

        self.spacerItem2= QSpacerItem(0, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.hlayout.addItem(self.spacerItem2)
        self.stackLayout.addWidget(self.mtoolbar)

        self.gview = graphicview.GraphicsView()
        self.gview.roichanged.connect(self.roiChanged)
        self.stackLayout.addWidget(self.gview)

    def setId(self,idx):
        if idx != 0:
            self._id = idx
            self.idLabel.setText('  ['+str(self._id)+']')
        else:
            self._id = 0
            self.idLabel.setText('')

    def setDisplayImage(self,img):
        if img is None:
            self.gview.showCapImage(self._nonpix)
        else:
            self.gview.showCapImage(img)

    # def closeEvent(self, event):
    #     self.hide()
    #     print self.gview

